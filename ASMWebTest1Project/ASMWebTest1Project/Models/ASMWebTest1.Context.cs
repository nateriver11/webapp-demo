//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASMWebTest1Project.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ASMWebTest1Entities : DbContext
    {
        public ASMWebTest1Entities()
            : base("name=ASMWebTest1Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<Categories> Categories { get; set; }
        public virtual DbSet<Ideas> Ideas { get; set; }
        public virtual DbSet<Information> Information { get; set; }
        public virtual DbSet<Interactive> Interactive { get; set; }
        public virtual DbSet<Replies> Replies { get; set; }
        public virtual DbSet<LikeDislike> LikeDislike { get; set; }
        public virtual DbSet<Departments> Departments { get; set; }
        public virtual DbSet<view_a> view_a { get; set; }
        public virtual DbSet<view_d> view_d { get; set; }
        public virtual DbSet<view_e> view_e { get; set; }
    
        public virtual ObjectResult<GetTotalContributors_Result> GetTotalContributors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTotalContributors_Result>("GetTotalContributors");
        }
    
        public virtual ObjectResult<GetTotalIdeas_Result> GetTotalIdeas(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTotalIdeas_Result>("GetTotalIdeas", yearParameter);
        }
    }
}
